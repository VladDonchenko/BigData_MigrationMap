{"ast":null,"code":"var _jsxFileName = \"/home/vlad/Migratio_Map/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Map from './components/Map';\nimport Stats from './components/Stats';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:8000/api/v1';\nconst App = () => {\n  _s();\n  const [cities, setCities] = useState([]);\n  const [migrationFlows, setMigrationFlows] = useState([]);\n  const [migrationStats, setMigrationStats] = useState(null);\n  const [selectedCity, setSelectedCity] = useState();\n  const [cityStats, setCityStats] = useState(null);\n  useEffect(() => {\n    // Завантаження міст\n    fetch(`${API_BASE_URL}/cities`).then(response => response.json()).then(data => setCities(data)).catch(error => console.error('Помилка завантаження міст:', error));\n\n    // Завантаження потоків міграції\n    fetch(`${API_BASE_URL}/migration/flows`).then(response => response.json()).then(data => setMigrationFlows(data)).catch(error => console.error('Помилка завантаження потоків міграції:', error));\n\n    // Завантаження загальної статистики\n    fetch(`${API_BASE_URL}/migration/stats`).then(response => response.json()).then(data => setMigrationStats(data)).catch(error => console.error('Помилка завантаження статистики:', error));\n  }, []);\n  useEffect(() => {\n    if (selectedCity) {\n      // Завантаження статистики для вибраного міста\n      fetch(`${API_BASE_URL}/cities/${selectedCity}/stats`).then(response => response.json()).then(data => setCityStats(data)).catch(error => console.error('Помилка завантаження статистики міста:', error));\n    } else {\n      setCityStats(null);\n    }\n  }, [selectedCity]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Migratio Map - \\u0410\\u043D\\u0430\\u043B\\u0456\\u0437 \\u043C\\u0456\\u0433\\u0440\\u0430\\u0446\\u0456\\u0457 \\u0432 \\u0423\\u043A\\u0440\\u0430\\u0457\\u043D\\u0456\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-container\",\n        children: /*#__PURE__*/_jsxDEV(Map, {\n          cities: cities,\n          migrationFlows: migrationFlows,\n          selectedCity: selectedCity,\n          onCitySelect: setSelectedCity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-container\",\n        children: migrationStats && /*#__PURE__*/_jsxDEV(Stats, {\n          migrationStats: migrationStats,\n          cityStats: cityStats || undefined\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"G1XUFcxizNl+OGgvoUp0Ekb2N24=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Map","Stats","jsxDEV","_jsxDEV","API_BASE_URL","App","_s","cities","setCities","migrationFlows","setMigrationFlows","migrationStats","setMigrationStats","selectedCity","setSelectedCity","cityStats","setCityStats","fetch","then","response","json","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onCitySelect","undefined","_c","$RefreshReg$"],"sources":["/home/vlad/Migratio_Map/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Map from './components/Map';\nimport Stats from './components/Stats';\nimport { City, MigrationFlow, MigrationStats, CityStats } from './types';\nimport './App.css';\n\nconst API_BASE_URL = 'http://localhost:8000/api/v1';\n\nconst App = () => {\n    const [cities, setCities] = useState<City[]>([]);\n    const [migrationFlows, setMigrationFlows] = useState<MigrationFlow[]>([]);\n    const [migrationStats, setMigrationStats] = useState<MigrationStats | null>(null);\n    const [selectedCity, setSelectedCity] = useState<string | undefined>();\n    const [cityStats, setCityStats] = useState<CityStats | null>(null);\n\n    useEffect(() => {\n        // Завантаження міст\n        fetch(`${API_BASE_URL}/cities`)\n            .then(response => response.json())\n            .then(data => setCities(data))\n            .catch(error => console.error('Помилка завантаження міст:', error));\n\n        // Завантаження потоків міграції\n        fetch(`${API_BASE_URL}/migration/flows`)\n            .then(response => response.json())\n            .then(data => setMigrationFlows(data))\n            .catch(error => console.error('Помилка завантаження потоків міграції:', error));\n\n        // Завантаження загальної статистики\n        fetch(`${API_BASE_URL}/migration/stats`)\n            .then(response => response.json())\n            .then(data => setMigrationStats(data))\n            .catch(error => console.error('Помилка завантаження статистики:', error));\n    }, []);\n\n    useEffect(() => {\n        if (selectedCity) {\n            // Завантаження статистики для вибраного міста\n            fetch(`${API_BASE_URL}/cities/${selectedCity}/stats`)\n                .then(response => response.json())\n                .then(data => setCityStats(data))\n                .catch(error => console.error('Помилка завантаження статистики міста:', error));\n        } else {\n            setCityStats(null);\n        }\n    }, [selectedCity]);\n\n    return (\n        <div className=\"app\">\n            <header className=\"app-header\">\n                <h1>Migratio Map - Аналіз міграції в Україні</h1>\n            </header>\n            <main className=\"app-main\">\n                <div className=\"map-container\">\n                    <Map\n                        cities={cities}\n                        migrationFlows={migrationFlows}\n                        selectedCity={selectedCity}\n                        onCitySelect={setSelectedCity}\n                    />\n                </div>\n                <div className=\"stats-container\">\n                    {migrationStats && (\n                        <Stats\n                            migrationStats={migrationStats}\n                            cityStats={cityStats || undefined}\n                        />\n                    )}\n                </div>\n            </main>\n        </div>\n    );\n};\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}