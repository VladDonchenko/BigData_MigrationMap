{"ast":null,"code":"var _jsxFileName = \"/home/vlad/Migratio_Map/frontend/src/components/Map.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, CircleMarker, Polyline, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = ({\n  cities,\n  migrationFlows,\n  selectedCity,\n  onCitySelect\n}) => {\n  _s();\n  const [center, setCenter] = useState([48.3794, 31.1656]); // Центр Украины\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (selectedCity) {\n      const city = cities.find(c => c.name === selectedCity);\n      if (city) {\n        setCenter([city.latitude, city.longitude]);\n      } else {\n        setError('Місто не знайдено');\n      }\n    }\n  }, [selectedCity, cities]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u041F\\u043E\\u043C\\u0438\\u043B\\u043A\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: center,\n    zoom: 6,\n    style: {\n      height: '600px',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), cities.map(city => /*#__PURE__*/_jsxDEV(CircleMarker, {\n      center: [city.latitude, city.longitude],\n      radius: 8,\n      fillColor: city.name === selectedCity ? '#e74c3c' : '#3498db',\n      color: \"#fff\",\n      weight: 2,\n      eventHandlers: {\n        click: () => onCitySelect(city.name)\n      },\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: city.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u041D\\u0430\\u0441\\u0435\\u043B\\u0435\\u043D\\u043D\\u044F: \", city.population.toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u0420\\u0435\\u0433\\u0456\\u043E\\u043D: \", city.region]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)\n    }, city.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this)), migrationFlows.map((flow, index) => {\n      const fromCity = cities.find(c => c.name === flow.fromCity);\n      const toCity = cities.find(c => c.name === flow.toCity);\n      if (!fromCity || !toCity) return null;\n      return /*#__PURE__*/_jsxDEV(Polyline, {\n        positions: [[fromCity.latitude, fromCity.longitude], [toCity.latitude, toCity.longitude]],\n        color: \"#2ecc71\",\n        weight: Math.min(flow.count / 100, 5),\n        opacity: 0.6,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u041C\\u0456\\u0433\\u0440\\u0430\\u0446\\u0456\\u0439\\u043D\\u0438\\u0439 \\u043F\\u043E\\u0442\\u0456\\u043A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u0412\\u0456\\u0434: \", flow.fromCity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u0414\\u043E: \", flow.toCity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u041A\\u0456\\u043B\\u044C\\u043A\\u0456\\u0441\\u0442\\u044C: \", flow.count]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u0421\\u0435\\u0440\\u0435\\u0434\\u043D\\u0456\\u0439 \\u0432\\u0456\\u043A: \", flow.average_age]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u0421\\u0435\\u0440\\u0435\\u0434\\u043D\\u044F \\u0442\\u0440\\u0438\\u0432\\u0430\\u043B\\u0456\\u0441\\u0442\\u044C: \", flow.average_duration, \" \\u0434\\u043D\\u0456\\u0432\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u0412\\u0456\\u0434\\u0441\\u0442\\u0430\\u043D\\u044C: \", flow.distance.toFixed(1), \" \\u043A\\u043C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(Map, \"p8MB9MGolpHiBGH75Qa9KN2Id0E=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","CircleMarker","Polyline","Popup","jsxDEV","_jsxDEV","Map","cities","migrationFlows","selectedCity","onCitySelect","_s","center","setCenter","error","setError","city","find","c","name","latitude","longitude","className","children","fileName","_jsxFileName","lineNumber","columnNumber","zoom","style","height","width","url","attribution","map","radius","fillColor","color","weight","eventHandlers","click","population","toLocaleString","region","flow","index","fromCity","toCity","positions","Math","min","count","opacity","average_age","average_duration","distance","toFixed","_c","$RefreshReg$"],"sources":["/home/vlad/Migratio_Map/frontend/src/components/Map.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, CircleMarker, Polyline, Popup } from 'react-leaflet';\nimport { LatLngTuple } from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { City, MigrationFlow } from '../types';\n\ninterface MapProps {\n    cities: City[];\n    migrationFlows: MigrationFlow[];\n    selectedCity?: string;\n    onCitySelect: (cityName: string) => void;\n}\n\nconst Map: React.FC<MapProps> = ({ cities, migrationFlows, selectedCity, onCitySelect }) => {\n    const [center, setCenter] = useState<LatLngTuple>([48.3794, 31.1656]); // Центр Украины\n    const [error, setError] = useState<string | null>(null);\n\n    useEffect(() => {\n        if (selectedCity) {\n            const city = cities.find(c => c.name === selectedCity);\n            if (city) {\n                setCenter([city.latitude, city.longitude]);\n            } else {\n                setError('Місто не знайдено');\n            }\n        }\n    }, [selectedCity, cities]);\n\n    if (error) {\n        return (\n            <div className=\"error\">\n                <h2>Помилка</h2>\n                <p>{error}</p>\n            </div>\n        );\n    }\n\n    return (\n        <MapContainer\n            center={center}\n            zoom={6}\n            style={{ height: '600px', width: '100%' }}\n        >\n            <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            />\n            \n            {cities.map(city => (\n                <CircleMarker\n                    key={city.name}\n                    center={[city.latitude, city.longitude] as LatLngTuple}\n                    radius={8}\n                    fillColor={city.name === selectedCity ? '#e74c3c' : '#3498db'}\n                    color=\"#fff\"\n                    weight={2}\n                    eventHandlers={{\n                        click: () => onCitySelect(city.name)\n                    }}\n                >\n                    <Popup>\n                        <div>\n                            <h3>{city.name}</h3>\n                            <p>Населення: {city.population.toLocaleString()}</p>\n                            <p>Регіон: {city.region}</p>\n                        </div>\n                    </Popup>\n                </CircleMarker>\n            ))}\n            {migrationFlows.map((flow, index) => {\n                const fromCity = cities.find(c => c.name === flow.fromCity);\n                const toCity = cities.find(c => c.name === flow.toCity);\n                \n                if (!fromCity || !toCity) return null;\n\n                return (\n                    <Polyline\n                        key={index}\n                        positions={[\n                            [fromCity.latitude, fromCity.longitude],\n                            [toCity.latitude, toCity.longitude]\n                        ]}\n                        color=\"#2ecc71\"\n                        weight={Math.min(flow.count / 100, 5)}\n                        opacity={0.6}\n                    >\n                        <Popup>\n                            <div>\n                                <h3>Міграційний потік</h3>\n                                <p>Від: {flow.fromCity}</p>\n                                <p>До: {flow.toCity}</p>\n                                <p>Кількість: {flow.count}</p>\n                                <p>Середній вік: {flow.average_age}</p>\n                                <p>Середня тривалість: {flow.average_duration} днів</p>\n                                <p>Відстань: {flow.distance.toFixed(1)} км</p>\n                            </div>\n                        </Popup>\n                    </Polyline>\n                );\n            })}\n        </MapContainer>\n    );\n};\n\nexport default Map; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,SAAS,EAAEC,YAAY,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,eAAe;AAEtF,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUlC,MAAMC,GAAuB,GAAGA,CAAC;EAAEC,MAAM;EAAEC,cAAc;EAAEC,YAAY;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACxF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAc,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;EACvE,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAgB,IAAI,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACZ,IAAIY,YAAY,EAAE;MACd,MAAMO,IAAI,GAAGT,MAAM,CAACU,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAKV,YAAY,CAAC;MACtD,IAAIO,IAAI,EAAE;QACNH,SAAS,CAAC,CAACG,IAAI,CAACI,QAAQ,EAAEJ,IAAI,CAACK,SAAS,CAAC,CAAC;MAC9C,CAAC,MAAM;QACHN,QAAQ,CAAC,mBAAmB,CAAC;MACjC;IACJ;EACJ,CAAC,EAAE,CAACN,YAAY,EAAEF,MAAM,CAAC,CAAC;EAE1B,IAAIO,KAAK,EAAE;IACP,oBACIT,OAAA;MAAKiB,SAAS,EAAC,OAAO;MAAAC,QAAA,gBAClBlB,OAAA;QAAAkB,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChBtB,OAAA;QAAAkB,QAAA,EAAIT;MAAK;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC;EAEd;EAEA,oBACItB,OAAA,CAACN,YAAY;IACTa,MAAM,EAAEA,MAAO;IACfgB,IAAI,EAAE,CAAE;IACRC,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAR,QAAA,gBAE1ClB,OAAA,CAACL,SAAS;MACNgC,GAAG,EAAC,oDAAoD;MACxDC,WAAW,EAAC;IAAyF;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxG,CAAC,EAEDpB,MAAM,CAAC2B,GAAG,CAAClB,IAAI,iBACZX,OAAA,CAACJ,YAAY;MAETW,MAAM,EAAE,CAACI,IAAI,CAACI,QAAQ,EAAEJ,IAAI,CAACK,SAAS,CAAiB;MACvDc,MAAM,EAAE,CAAE;MACVC,SAAS,EAAEpB,IAAI,CAACG,IAAI,KAAKV,YAAY,GAAG,SAAS,GAAG,SAAU;MAC9D4B,KAAK,EAAC,MAAM;MACZC,MAAM,EAAE,CAAE;MACVC,aAAa,EAAE;QACXC,KAAK,EAAEA,CAAA,KAAM9B,YAAY,CAACM,IAAI,CAACG,IAAI;MACvC,CAAE;MAAAI,QAAA,eAEFlB,OAAA,CAACF,KAAK;QAAAoB,QAAA,eACFlB,OAAA;UAAAkB,QAAA,gBACIlB,OAAA;YAAAkB,QAAA,EAAKP,IAAI,CAACG;UAAI;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACpBtB,OAAA;YAAAkB,QAAA,GAAG,0DAAW,EAACP,IAAI,CAACyB,UAAU,CAACC,cAAc,CAAC,CAAC;UAAA;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpDtB,OAAA;YAAAkB,QAAA,GAAG,wCAAQ,EAACP,IAAI,CAAC2B,MAAM;UAAA;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC,GAhBHX,IAAI,CAACG,IAAI;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAiBJ,CACjB,CAAC,EACDnB,cAAc,CAAC0B,GAAG,CAAC,CAACU,IAAI,EAAEC,KAAK,KAAK;MACjC,MAAMC,QAAQ,GAAGvC,MAAM,CAACU,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAKyB,IAAI,CAACE,QAAQ,CAAC;MAC3D,MAAMC,MAAM,GAAGxC,MAAM,CAACU,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAKyB,IAAI,CAACG,MAAM,CAAC;MAEvD,IAAI,CAACD,QAAQ,IAAI,CAACC,MAAM,EAAE,OAAO,IAAI;MAErC,oBACI1C,OAAA,CAACH,QAAQ;QAEL8C,SAAS,EAAE,CACP,CAACF,QAAQ,CAAC1B,QAAQ,EAAE0B,QAAQ,CAACzB,SAAS,CAAC,EACvC,CAAC0B,MAAM,CAAC3B,QAAQ,EAAE2B,MAAM,CAAC1B,SAAS,CAAC,CACrC;QACFgB,KAAK,EAAC,SAAS;QACfC,MAAM,EAAEW,IAAI,CAACC,GAAG,CAACN,IAAI,CAACO,KAAK,GAAG,GAAG,EAAE,CAAC,CAAE;QACtCC,OAAO,EAAE,GAAI;QAAA7B,QAAA,eAEblB,OAAA,CAACF,KAAK;UAAAoB,QAAA,eACFlB,OAAA;YAAAkB,QAAA,gBACIlB,OAAA;cAAAkB,QAAA,EAAI;YAAiB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC1BtB,OAAA;cAAAkB,QAAA,GAAG,sBAAK,EAACqB,IAAI,CAACE,QAAQ;YAAA;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC3BtB,OAAA;cAAAkB,QAAA,GAAG,gBAAI,EAACqB,IAAI,CAACG,MAAM;YAAA;cAAAvB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACxBtB,OAAA;cAAAkB,QAAA,GAAG,0DAAW,EAACqB,IAAI,CAACO,KAAK;YAAA;cAAA3B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC9BtB,OAAA;cAAAkB,QAAA,GAAG,uEAAc,EAACqB,IAAI,CAACS,WAAW;YAAA;cAAA7B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACvCtB,OAAA;cAAAkB,QAAA,GAAG,2GAAoB,EAACqB,IAAI,CAACU,gBAAgB,EAAC,2BAAK;YAAA;cAAA9B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eACvDtB,OAAA;cAAAkB,QAAA,GAAG,oDAAU,EAACqB,IAAI,CAACW,QAAQ,CAACC,OAAO,CAAC,CAAC,CAAC,EAAC,eAAG;YAAA;cAAAhC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC,GAnBHkB,KAAK;QAAArB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAoBJ,CAAC;IAEnB,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEvB,CAAC;AAAChB,EAAA,CAzFIL,GAAuB;AAAAmD,EAAA,GAAvBnD,GAAuB;AA2F7B,eAAeA,GAAG;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}