{"ast":null,"code":"var _jsxFileName = \"/home/vlad/Migratio_Map/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { Container, CssBaseline, ThemeProvider, createTheme } from '@mui/material';\nimport MigrationMap from './components/MigrationMap';\nimport MigrationFlowDetails from './components/MigrationFlowDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    mode: 'light',\n    primary: {\n      main: '#1976d2'\n    },\n    secondary: {\n      main: '#dc004e'\n    }\n  }\n});\nconst App = () => {\n  _s();\n  const [cities, setCities] = useState([]);\n  const [stats, setStats] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [citiesResponse, statsResponse] = await Promise.all([fetch('http://localhost:8000/api/v1/cities'), fetch('http://localhost:8000/api/v1/migration/stats')]);\n        if (!citiesResponse.ok || !statsResponse.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        const citiesData = await citiesResponse.json();\n        const statsData = await statsResponse.json();\n        setCities(citiesData);\n        setStats(statsData);\n      } catch (error) {\n        console.error('Помилка:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"xl\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(MigrationMap, {\n              cities: cities\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/flow/:fromCity/:toCity\",\n            element: /*#__PURE__*/_jsxDEV(MigrationFlowDetails, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 60\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"WPJBxLwTGlRhXw5ltv5y0J50AKI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Container","CssBaseline","ThemeProvider","createTheme","MigrationMap","MigrationFlowDetails","jsxDEV","_jsxDEV","theme","palette","mode","primary","main","secondary","App","_s","cities","setCities","stats","setStats","fetchData","citiesResponse","statsResponse","Promise","all","fetch","ok","Error","citiesData","json","statsData","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","path","element","_c","$RefreshReg$"],"sources":["/home/vlad/Migratio_Map/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { Container, CssBaseline, ThemeProvider, createTheme } from '@mui/material';\nimport MigrationMap from './components/MigrationMap';\nimport MigrationFlowDetails from './components/MigrationFlowDetails';\n\ninterface City {\n  id: number;\n  name: string;\n  region: string;\n  latitude: number;\n  longitude: number;\n  population: number;\n}\n\ninterface MigrationStats {\n  totalMigrations: number;\n  averageAge: number;\n  genderDistribution: {\n    male: number;\n    female: number;\n  };\n  topReasons: string[];\n}\n\nconst theme = createTheme({\n  palette: {\n    mode: 'light',\n    primary: {\n      main: '#1976d2',\n    },\n    secondary: {\n      main: '#dc004e',\n    },\n  },\n});\n\nconst App: React.FC = () => {\n  const [cities, setCities] = useState<City[]>([]);\n  const [stats, setStats] = useState<MigrationStats | null>(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [citiesResponse, statsResponse] = await Promise.all([\n          fetch('http://localhost:8000/api/v1/cities'),\n          fetch('http://localhost:8000/api/v1/migration/stats')\n        ]);\n\n        if (!citiesResponse.ok || !statsResponse.ok) {\n          throw new Error('Failed to fetch data');\n        }\n\n        const citiesData = await citiesResponse.json();\n        const statsData = await statsResponse.json();\n\n        setCities(citiesData);\n        setStats(statsData);\n      } catch (error) {\n        console.error('Помилка:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Router>\n        <Container maxWidth=\"xl\">\n          <Routes>\n            <Route path=\"/\" element={<MigrationMap cities={cities} />} />\n            <Route path=\"/flow/:fromCity/:toCity\" element={<MigrationFlowDetails />} />\n          </Routes>\n        </Container>\n      </Router>\n    </ThemeProvider>\n  );\n};\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}