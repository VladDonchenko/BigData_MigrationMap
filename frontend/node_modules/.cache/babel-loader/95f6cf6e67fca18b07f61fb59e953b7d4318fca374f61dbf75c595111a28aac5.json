{"ast":null,"code":"var _jsxFileName = \"/home/vlad/Migratio_Map/frontend/src/components/MigrationMap.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Typography, Paper, ToggleButtonGroup, ToggleButton } from '@mui/material';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\n\n// Исправление проблемы с иконками маркеров в Leaflet\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png'\n});\nconst MigrationMap = ({\n  cities\n}) => {\n  _s();\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [visualizationType, setVisualizationType] = useState('cities');\n\n  // Центр карты - Украина\n  const center = [48.3794, 31.1656];\n\n  // Обработчик изменения типа визуализации\n  const handleVisualizationChange = (event, newVisualization) => {\n    if (newVisualization !== null) {\n      setVisualizationType(newVisualization);\n    }\n  };\n\n  // Получение цвета маркера в зависимости от населения\n  const getMarkerColor = population => {\n    if (population > 1000000) return '#ff0000'; // Красный для больших городов\n    if (population > 500000) return '#ff7f00'; // Оранжевый для средних городов\n    if (population > 100000) return '#ffff00'; // Желтый для малых городов\n    return '#00ff00'; // Зеленый для очень малых городов\n  };\n\n  // Получение размера маркера в зависимости от населения\n  const getMarkerSize = population => {\n    return Math.log10(population) * 5;\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"\\u041A\\u0430\\u0440\\u0442\\u0430 \\u043C\\u0456\\u0433\\u0440\\u0430\\u0446\\u0456\\u0457\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n        value: visualizationType,\n        exclusive: true,\n        onChange: handleVisualizationChange,\n        \"aria-label\": \"\\u0442\\u0438\\u043F \\u0432\\u0456\\u0437\\u0443\\u0430\\u043B\\u0456\\u0437\\u0430\\u0446\\u0456\\u0457\",\n        children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: \"cities\",\n          \"aria-label\": \"\\u043C\\u0456\\u0441\\u0442\\u0430\",\n          children: \"\\u041C\\u0456\\u0441\\u0442\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: \"population\",\n          \"aria-label\": \"\\u043D\\u0430\\u0441\\u0435\\u043B\\u0435\\u043D\\u043D\\u044F\",\n          children: \"\\u041D\\u0430\\u0441\\u0435\\u043B\\u0435\\u043D\\u043D\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        height: '600px',\n        overflow: 'hidden'\n      },\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: center,\n        zoom: 6,\n        style: {\n          height: '100%',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), cities.map(city => /*#__PURE__*/_jsxDEV(Marker, {\n          position: [city.latitude, city.longitude],\n          eventHandlers: {\n            click: () => setSelectedCity(city.name)\n          },\n          icon: L.divIcon({\n            className: 'custom-marker',\n            html: `<div style=\"\n                  background-color: ${getMarkerColor(city.population)};\n                  width: ${getMarkerSize(city.population)}px;\n                  height: ${getMarkerSize(city.population)}px;\n                  border-radius: 50%;\n                  border: 2px solid white;\n                  box-shadow: 0 0 10px rgba(0,0,0,0.5);\n                \"></div>`,\n            iconSize: [getMarkerSize(city.population), getMarkerSize(city.population)],\n            iconAnchor: [getMarkerSize(city.population) / 2, getMarkerSize(city.population) / 2]\n          }),\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: city.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"\\u0420\\u0435\\u0433\\u0456\\u043E\\u043D: \", city.region]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"\\u041D\\u0430\\u0441\\u0435\\u043B\\u0435\\u043D\\u043D\\u044F: \", city.population.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)\n        }, city.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(MigrationMap, \"Wzw5T8ZNvhRVMZBLCLlVmOH2cwY=\");\n_c = MigrationMap;\nexport default MigrationMap;\nvar _c;\n$RefreshReg$(_c, \"MigrationMap\");","map":{"version":3,"names":["React","useState","Box","Typography","Paper","ToggleButtonGroup","ToggleButton","MapContainer","TileLayer","Marker","Popup","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","MigrationMap","cities","_s","selectedCity","setSelectedCity","visualizationType","setVisualizationType","center","handleVisualizationChange","event","newVisualization","getMarkerColor","population","getMarkerSize","Math","log10","children","sx","display","justifyContent","alignItems","mb","variant","fileName","_jsxFileName","lineNumber","columnNumber","value","exclusive","onChange","height","overflow","zoom","style","width","url","attribution","map","city","position","latitude","longitude","eventHandlers","click","name","icon","divIcon","className","html","iconSize","iconAnchor","region","toLocaleString","_c","$RefreshReg$"],"sources":["/home/vlad/Migratio_Map/frontend/src/components/MigrationMap.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, Typography, Paper, ToggleButtonGroup, ToggleButton } from '@mui/material';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\n\n// Исправление проблемы с иконками маркеров в Leaflet\ndelete (L.Icon.Default.prototype as any)._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\n});\n\ninterface City {\n  name: string;\n  region: string;\n  latitude: number;\n  longitude: number;\n  population: number;\n}\n\ninterface MigrationMapProps {\n  cities: City[];\n}\n\nconst MigrationMap: React.FC<MigrationMapProps> = ({ cities }) => {\n  const [selectedCity, setSelectedCity] = useState<string | null>(null);\n  const [visualizationType, setVisualizationType] = useState<'cities' | 'population'>('cities');\n\n  // Центр карты - Украина\n  const center: [number, number] = [48.3794, 31.1656];\n\n  // Обработчик изменения типа визуализации\n  const handleVisualizationChange = (\n    event: React.MouseEvent<HTMLElement>,\n    newVisualization: 'cities' | 'population' | null,\n  ) => {\n    if (newVisualization !== null) {\n      setVisualizationType(newVisualization);\n    }\n  };\n\n  // Получение цвета маркера в зависимости от населения\n  const getMarkerColor = (population: number): string => {\n    if (population > 1000000) return '#ff0000'; // Красный для больших городов\n    if (population > 500000) return '#ff7f00'; // Оранжевый для средних городов\n    if (population > 100000) return '#ffff00'; // Желтый для малых городов\n    return '#00ff00'; // Зеленый для очень малых городов\n  };\n\n  // Получение размера маркера в зависимости от населения\n  const getMarkerSize = (population: number): number => {\n    return Math.log10(population) * 5;\n  };\n\n  return (\n    <Box>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n        <Typography variant=\"h5\">\n          Карта міграції\n        </Typography>\n        <ToggleButtonGroup\n          value={visualizationType}\n          exclusive\n          onChange={handleVisualizationChange}\n          aria-label=\"тип візуалізації\"\n        >\n          <ToggleButton value=\"cities\" aria-label=\"міста\">\n            Міста\n          </ToggleButton>\n          <ToggleButton value=\"population\" aria-label=\"населення\">\n            Населення\n          </ToggleButton>\n        </ToggleButtonGroup>\n      </Box>\n      \n      <Paper sx={{ height: '600px', overflow: 'hidden' }}>\n        <MapContainer \n          center={center} \n          zoom={6} \n          style={{ height: '100%', width: '100%' }}\n        >\n          <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          />\n          \n          {cities.map((city) => (\n            <Marker\n              key={city.name}\n              position={[city.latitude, city.longitude]}\n              eventHandlers={{\n                click: () => setSelectedCity(city.name),\n              }}\n              icon={L.divIcon({\n                className: 'custom-marker',\n                html: `<div style=\"\n                  background-color: ${getMarkerColor(city.population)};\n                  width: ${getMarkerSize(city.population)}px;\n                  height: ${getMarkerSize(city.population)}px;\n                  border-radius: 50%;\n                  border: 2px solid white;\n                  box-shadow: 0 0 10px rgba(0,0,0,0.5);\n                \"></div>`,\n                iconSize: [getMarkerSize(city.population), getMarkerSize(city.population)],\n                iconAnchor: [getMarkerSize(city.population) / 2, getMarkerSize(city.population) / 2],\n              })}\n            >\n              <Popup>\n                <Typography variant=\"h6\">{city.name}</Typography>\n                <Typography>Регіон: {city.region}</Typography>\n                <Typography>Населення: {city.population.toLocaleString()}</Typography>\n              </Popup>\n            </Marker>\n          ))}\n          \n          {/* Здесь будут линии миграции, когда API будет готов */}\n        </MapContainer>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default MigrationMap; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}